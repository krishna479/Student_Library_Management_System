package com.example.Student_Library_Management_System.Service;

import com.example.Student_Library_Management_System.DTOs.StudentUpdateMobRequestDto;
import com.example.Student_Library_Management_System.ENUMS.CardStatus;
import com.example.Student_Library_Management_System.Models.Card;
import com.example.Student_Library_Management_System.Models.Student;
import com.example.Student_Library_Management_System.Repository.StudentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class StudentService {

    @Autowired
    StudentRepository studentRepository;

    public String createStudent(Student student){

        //Student from the postman is already the basic attributes set.

        //Card Should be autogenerated when createStudent function is called
        Card card = new Card();
        card.setCardStatus(CardStatus.ACTIVATED);  //Card status is being set.
        card.setStudentVariableName(student); //Foreign key attribute
        // Filling the value with the unidirectional part.

        //Let's go the student and set the card
        student.setCard(card);

        //If there was a unidirectional mapping : we had to save both of them
        //studentRepo.save () and cardRepo.save()

        //But we are super advance and are using bidirectional : Child will automatically be saved ,when we saved the student.

        studentRepository.save(student);
        //By cascading effect, child will automatically be saved (cardRepo will be saved)
        return "Student and Card added";

    }

    public String findNameByEmail(String email) {
        Student student = studentRepository.findByEmail(email);
        return student.getName();

    }
    public String updateMobNo(StudentUpdateMobRequestDto studentReq){

        int id = studentReq.getId();
        Student newStudent = studentRepository.findById(id).get();
        newStudent.setMobileNumber(studentReq.getMobNo());
        studentRepository.save(newStudent);
        return "Done successfully";
//Ligh

//        //Convert the Dto to entity to fetch original data
//        int id = (studentUpdateMobRequestDto.getId());
//       // Student originalStudent = studentRepository.findById(id).get();
//        //originalStudent.setMobileNumber(newstudent.getMobileNumber());
//        studentRepository.save(originalStudent);
//        return "Done successfully";
    }
}
